{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{createLink}from'@meshconnect/web-link-sdk';import Cors from'cors';import initMiddleware from'../lib/init-middleware';// CORS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const cors=initMiddleware(Cors({methods:['POST','OPTIONS','GET'],origin:'*'}));// END CORS\nconst MakeAPICall=()=>{const[linkToken,setLinkToken]=useState(null);const iframeRef=useRef(null);const fetchData=async()=>{try{// this routes to next.js server running in background\nconst response=await fetch('http://localhost:3000/api/makeAPIcall',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setLinkToken(result.linkToken);}catch(error){console.error('Error fetching the API',error);}};useEffect(()=>{if(linkToken){const link=createLink({clientId:process.env.NEXT_PUBLIC_MESH_CLIENTID,onIntegrationConnected:data=>{console.log('Integration connected:',data);},onExit:error=>{if(error){console.error('Link exited with error:',error);}else{console.log('Link exited successfully');}}});link.openLink(linkToken,{container:iframeRef.current.contentWindow});// Open the Link UI in an iframe\n//   link.openLink(linkToken)\n//   const iframe = document.getElementById('mesh-link-iframe');\n//   iframe.onload = () => {\n//     link.openLink(linkToken);\n//   };\n}},[linkToken]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"Fetch Data\"}),linkToken?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Link Token success\"}),/*#__PURE__*/_jsxs(\"div\",{style:{maxHeight:'300px',overflowY:'auto',border:'1px solid #ccc',padding:'10px'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[\"Link Token: \",linkToken]}),\" \"]}),/*#__PURE__*/_jsx(\"iframe\",{ref:iframeRef,title:\"Mesh Connect Link\",style:{width:'100%',height:'500px',border:'1px solid #ccc'}})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No data fetched yet.\"})]});};export default MakeAPICall;","map":{"version":3,"names":["React","useState","useEffect","useRef","createLink","Cors","initMiddleware","jsx","_jsx","jsxs","_jsxs","cors","methods","origin","MakeAPICall","linkToken","setLinkToken","iframeRef","fetchData","response","fetch","method","headers","ok","Error","result","json","error","console","link","clientId","process","env","NEXT_PUBLIC_MESH_CLIENTID","onIntegrationConnected","data","log","onExit","openLink","container","current","contentWindow","children","onClick","style","maxHeight","overflowY","border","padding","whiteSpace","ref","title","width","height"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/MakeAPICall.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { createLink } from '@meshconnect/web-link-sdk';\n\nimport Cors from 'cors';\nimport initMiddleware from '../lib/init-middleware';\n\n// CORS\nconst cors = initMiddleware(\n  Cors({\n    methods: ['POST', 'OPTIONS', 'GET'], \n    origin: '*',\n  })\n);\n// END CORS\n\nconst MakeAPICall = () => {\n  const [linkToken, setLinkToken] = useState(null);\n  const iframeRef = useRef(null);\n\n  const fetchData = async () => {\n    try {\n      // this routes to next.js server running in background\n      const response = await fetch('http://localhost:3000/api/makeAPIcall', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setLinkToken(result.linkToken);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n    }\n  };\n  useEffect(() => {\n    if (linkToken) {\n      const link = createLink({\n        clientId: process.env.NEXT_PUBLIC_MESH_CLIENTID,\n        onIntegrationConnected: (data) => {\n          console.log('Integration connected:', data);\n        },\n        onExit: (error) => {\n          if (error) {\n            console.error('Link exited with error:', error);\n          } else {\n            console.log('Link exited successfully');\n          }\n        }\n      });\n      link.openLink(linkToken, {\n        container: iframeRef.current.contentWindow,\n      });\n      // Open the Link UI in an iframe\n    //   link.openLink(linkToken)\n    //   const iframe = document.getElementById('mesh-link-iframe');\n    //   iframe.onload = () => {\n    //     link.openLink(linkToken);\n    //   };\n    }\n  }, [linkToken]);\n\n  return (\n    <div>\n      <button onClick={fetchData}>Fetch Data</button>\n      {linkToken ? (\n        <div>\n          <h3>Link Token success</h3>\n          <div style={{ maxHeight: '300px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}>\n            <p style={{ whiteSpace: 'pre-wrap' }}>Link Token: {linkToken}</p> {/* Display linkToken here */}\n          </div>\n          <iframe\n            ref={iframeRef}\n            title=\"Mesh Connect Link\"\n            style={{ width: '100%', height: '500px', border: '1px solid #ccc' }}\n          />\n        </div>\n      ) : (\n        <div>No data fetched yet.</div>\n      )}\n\n    </div>\n  );\n};\n\n\nexport default MakeAPICall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}