{"ast":null,"code":"import React,{useState}from'react';import{createLink}from'@meshconnect/web-link-sdk';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenLink=()=>{const[iFrameUrl,setIFrameUrl]=useState(null);const fetchData=async()=>{try{const response=await fetch('http://localhost:3000/api/getCatalogLink',{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setIFrameUrl(result.iFrameUrl);}catch(error){console.error('Error fetching the API',error);}};const openCatalogPopup=async()=>{try{if(iFrameUrl){// Open a popup window with the iFrameUrl\nconst popup=window.open('','_blank','width=800,height=600');// Ensure popup window is opened before setting content\nif(!popup){throw new Error('Failed to open popup window');}// Set content of popup window to display the iFrameUrl inside an iframe\npopup.document.body.innerHTML=\"\\n          <iframe src=\\\"\".concat(iFrameUrl,\"\\\" style=\\\"width:100%; height:100%; border:none;\\\"></iframe>\\n        \");}}catch(error){console.error('Error opening catalog:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"Fetch Catalog Link\"}),iFrameUrl?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Catalog Link success\"}),/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[\"Catalog IFrame URL: \",iFrameUrl]}),/*#__PURE__*/_jsx(\"button\",{onClick:openCatalogPopup,children:\"Open Catalog\"})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No catalog link fetched yet.\"})]});};export default OpenLink;","map":{"version":3,"names":["React","useState","createLink","jsx","_jsx","jsxs","_jsxs","OpenLink","iFrameUrl","setIFrameUrl","fetchData","response","fetch","method","headers","ok","Error","result","json","error","console","openCatalogPopup","popup","window","open","document","body","innerHTML","concat","children","onClick","style","whiteSpace"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLink.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createLink } from '@meshconnect/web-link-sdk';\n\nconst OpenLink = () => {\n  const [iFrameUrl, setIFrameUrl] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/getCatalogLink', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setIFrameUrl(result.iFrameUrl);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n    }\n  };\n\n  const openCatalogPopup = async () => {\n    try {\n      if (iFrameUrl) {\n        // Open a popup window with the iFrameUrl\n        const popup = window.open('', '_blank', 'width=800,height=600');\n        \n        // Ensure popup window is opened before setting content\n        if (!popup) {\n          throw new Error('Failed to open popup window');\n        }\n\n        // Set content of popup window to display the iFrameUrl inside an iframe\n        popup.document.body.innerHTML = `\n          <iframe src=\"${iFrameUrl}\" style=\"width:100%; height:100%; border:none;\"></iframe>\n        `;\n      }\n    } catch (error) {\n      console.error('Error opening catalog:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={fetchData}>Fetch Catalog Link</button>\n      {iFrameUrl ? (\n        <div>\n          <h3>Catalog Link success</h3>\n          <p style={{ whiteSpace: 'pre-wrap' }}>Catalog IFrame URL: {iFrameUrl}</p>\n          <button onClick={openCatalogPopup}>Open Catalog</button>\n        </div>\n      ) : (\n        <div>No catalog link fetched yet.</div>\n      )}\n    </div>\n  );\n};\n\nexport default OpenLink;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,UAAU,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAS,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCT,YAAY,CAACQ,MAAM,CAACT,SAAS,CAAC,CAChC,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,GAAIb,SAAS,CAAE,CACb;AACA,KAAM,CAAAc,KAAK,CAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAE,QAAQ,CAAE,sBAAsB,CAAC,CAE/D;AACA,GAAI,CAACF,KAAK,CAAE,CACV,KAAM,IAAI,CAAAN,KAAK,CAAC,6BAA6B,CAAC,CAChD,CAEA;AACAM,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACC,SAAS,8BAAAC,MAAA,CACZpB,SAAS,0EACzB,CACH,CACF,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,mBACEb,KAAA,QAAAuB,QAAA,eACEzB,IAAA,WAAQ0B,OAAO,CAAEpB,SAAU,CAAAmB,QAAA,CAAC,oBAAkB,CAAQ,CAAC,CACtDrB,SAAS,cACRF,KAAA,QAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BvB,KAAA,MAAGyB,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAH,QAAA,EAAC,sBAAoB,CAACrB,SAAS,EAAI,CAAC,cACzEJ,IAAA,WAAQ0B,OAAO,CAAET,gBAAiB,CAAAQ,QAAA,CAAC,cAAY,CAAQ,CAAC,EACrD,CAAC,cAENzB,IAAA,QAAAyB,QAAA,CAAK,8BAA4B,CAAK,CACvC,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}