{"ast":null,"code":"import React,{useState,useEffect}from'react';import{createLink}from'@meshconnect/web-link-sdk';import PopupWindow from'./PopupWindow';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenLinkWebSDK=()=>{const[linkConnection,setLinkConnection]=useState(null);const[linkToken,setLinkToken]=useState(null);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);let popupWindow=null;useEffect(()=>{const fetchLinkToken=async()=>{setLoading(true);setError(null);try{const response=await fetch('http://localhost:3000/api/linkTokenCall',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setLinkToken(result.linkToken);}catch(error){console.error('Error fetching link token:',error);setError(error.message);}finally{setLoading(false);}};fetchLinkToken();const link=createLink({clientId:\"b7007f87-c050-40cf-7777-08dc6f959a47\",// Replace with your client ID\nonIntegrationConnected:data=>{console.log('Integration connected:',data);},onEvent:event=>{console.info('Mesh EVENT',event);if(event.type==='close'){console.log('Close event occurred in Mesh modal');if(popupWindow){popupWindow.close();popupWindow=null;}}},onExit:error=>{if(error){console.error('Link exited with error:',error);}else{console.log('Link exited successfully');}}});setLinkConnection(link);return()=>{if(linkConnection){linkConnection.destroy();}};},[]);const openPopup=()=>{if(!linkToken){setError('Link token not fetched yet.');return;}if(popupWindow&&!popupWindow.closed){popupWindow.location.reload();}else{popupWindow=window.open('','MeshLinkPopup','width=800,height=600');if(popupWindow){popupWindow.document.title='MeshLinkPopup';popupWindow.document.body.innerHTML='<div id=\"popup-root\"></div>';const popupRoot=popupWindow.document.getElementById('popup-root');const popupComponent=/*#__PURE__*/_jsx(PopupWindow,{linkToken:linkToken,linkConnection:linkConnection});ReactDOM.render(popupComponent,popupRoot);}else{setError('Popup blocked. Please enable popups for this site.');}}};const handleButtonClick=()=>{openPopup();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClick,disabled:loading,children:loading?'Loading...':'OpenLink via SDK'}),error&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),linkToken&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Link Token: \",linkToken]})]});};export default OpenLinkWebSDK;","map":{"version":3,"names":["React","useState","useEffect","createLink","PopupWindow","jsx","_jsx","jsxs","_jsxs","OpenLinkWebSDK","linkConnection","setLinkConnection","linkToken","setLinkToken","error","setError","loading","setLoading","popupWindow","fetchLinkToken","response","fetch","method","headers","ok","Error","result","json","console","message","link","clientId","onIntegrationConnected","data","log","onEvent","event","info","type","close","onExit","destroy","openPopup","closed","location","reload","window","open","document","title","body","innerHTML","popupRoot","getElementById","popupComponent","ReactDOM","render","handleButtonClick","children","onClick","disabled"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLinkWebSDK.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createLink } from '@meshconnect/web-link-sdk';\nimport PopupWindow from './PopupWindow';\n\nconst OpenLinkWebSDK = () => {\n  const [linkConnection, setLinkConnection] = useState(null);\n  const [linkToken, setLinkToken] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  let popupWindow = null;\n\n  useEffect(() => {\n    const fetchLinkToken = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('http://localhost:3000/api/linkTokenCall', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Network response error');\n        }\n\n        const result = await response.json();\n        setLinkToken(result.linkToken);\n      } catch (error) {\n        console.error('Error fetching link token:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchLinkToken();\n\n    const link = createLink({\n      clientId: \"b7007f87-c050-40cf-7777-08dc6f959a47\", // Replace with your client ID\n      onIntegrationConnected: (data) => {\n        console.log('Integration connected:', data);\n      },\n      onEvent: (event) => {\n        console.info('Mesh EVENT', event);\n        if (event.type === 'close') {\n          console.log('Close event occurred in Mesh modal');\n          if (popupWindow) {\n            popupWindow.close();\n            popupWindow = null;\n          }\n        }\n      },\n      onExit: (error) => {\n        if (error) {\n          console.error('Link exited with error:', error);\n        } else {\n          console.log('Link exited successfully');\n        }\n      }\n    });\n    setLinkConnection(link);\n\n    return () => {\n      if (linkConnection) {\n        linkConnection.destroy();\n      }\n    };\n  }, []);\n\n  const openPopup = () => {\n    if (!linkToken) {\n      setError('Link token not fetched yet.');\n      return;\n    }\n\n    if (popupWindow && !popupWindow.closed) {\n      popupWindow.location.reload();\n    } else {\n      popupWindow = window.open('', 'MeshLinkPopup', 'width=800,height=600');\n      if (popupWindow) {\n        popupWindow.document.title = 'MeshLinkPopup';\n        popupWindow.document.body.innerHTML = '<div id=\"popup-root\"></div>';\n        const popupRoot = popupWindow.document.getElementById('popup-root');\n        const popupComponent = <PopupWindow linkToken={linkToken} linkConnection={linkConnection} />;\n        ReactDOM.render(popupComponent, popupRoot);\n      } else {\n        setError('Popup blocked. Please enable popups for this site.');\n      }\n    }\n  };\n\n  const handleButtonClick = () => {\n    openPopup();\n  };\n\n  return (\n    <div>\n      <button onClick={handleButtonClick} disabled={loading}>\n        {loading ? 'Loading...' : 'OpenLink via SDK'}\n      </button>\n      {error && <p>Error: {error}</p>}\n      {linkToken && <p>Link Token: {linkToken}</p>}\n    </div>\n  );\n};\n\nexport default OpenLinkWebSDK;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}