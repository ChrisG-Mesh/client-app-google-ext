{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const OpenLinkWebSDK=()=>{const handleOpenPopupClick=()=>{const popupWindow=window.open('','MeshLinkPopup','width=800,height=600');if(popupWindow){popupWindow.document.body.innerHTML=\"\\n        <div style=\\\"text-align: center; padding: 20px;\\\">\\n          <h1>Mesh Popup Window</h1>\\n          <button id=\\\"openLinkButton\\\">Open Link</button>\\n        </div>\\n      \";popupWindow.document.title='Mesh Popup Window';popupWindow.document.body.style.backgroundColor='#f0f0f0';// Example: Adding a click event listener to the button\nconst openLinkButton=popupWindow.document.getElementById('openLinkButton');openLinkButton.addEventListener('click',handleOpenLinkButtonClick);}else{alert('Popup blocked. Please enable popups for this site.');}};const handleOpenLinkButtonClick=()=>{// Handle opening the link or any other action in the popup window\nconsole.log('Opening link...');// You can add more logic here as needed\n};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:handleOpenPopupClick,children:\"Open Mesh\"})});};export default OpenLinkWebSDK;","map":{"version":3,"names":["React","jsx","_jsx","OpenLinkWebSDK","handleOpenPopupClick","popupWindow","window","open","document","body","innerHTML","title","style","backgroundColor","openLinkButton","getElementById","addEventListener","handleOpenLinkButtonClick","alert","console","log","children","onClick"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLinkWebSDK.js"],"sourcesContent":["import React from 'react';\n\nconst OpenLinkWebSDK = () => {\n  const handleOpenPopupClick = () => {\n    const popupWindow = window.open('', 'MeshLinkPopup', 'width=800,height=600');\n    if (popupWindow) {\n      popupWindow.document.body.innerHTML = `\n        <div style=\"text-align: center; padding: 20px;\">\n          <h1>Mesh Popup Window</h1>\n          <button id=\"openLinkButton\">Open Link</button>\n        </div>\n      `;\n      popupWindow.document.title = 'Mesh Popup Window';\n      popupWindow.document.body.style.backgroundColor = '#f0f0f0';\n\n      // Example: Adding a click event listener to the button\n      const openLinkButton = popupWindow.document.getElementById('openLinkButton');\n      openLinkButton.addEventListener('click', handleOpenLinkButtonClick);\n    } else {\n      alert('Popup blocked. Please enable popups for this site.');\n    }\n  };\n\n  const handleOpenLinkButtonClick = () => {\n    // Handle opening the link or any other action in the popup window\n    console.log('Opening link...');\n    // You can add more logic here as needed\n  };\n\n  return (\n    <div>\n      <button onClick={handleOpenPopupClick}>\n        Open Mesh\n      </button>\n    </div>\n  );\n};\n\nexport default OpenLinkWebSDK;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAE,eAAe,CAAE,sBAAsB,CAAC,CAC5E,GAAIF,WAAW,CAAE,CACfA,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,SAAS,yLAKlC,CACDL,WAAW,CAACG,QAAQ,CAACG,KAAK,CAAG,mBAAmB,CAChDN,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,CAAG,SAAS,CAE3D;AACA,KAAM,CAAAC,cAAc,CAAGT,WAAW,CAACG,QAAQ,CAACO,cAAc,CAAC,gBAAgB,CAAC,CAC5ED,cAAc,CAACE,gBAAgB,CAAC,OAAO,CAAEC,yBAAyB,CAAC,CACrE,CAAC,IAAM,CACLC,KAAK,CAAC,oDAAoD,CAAC,CAC7D,CACF,CAAC,CAED,KAAM,CAAAD,yBAAyB,CAAGA,CAAA,GAAM,CACtC;AACAE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B;AACF,CAAC,CAED,mBACElB,IAAA,QAAAmB,QAAA,cACEnB,IAAA,WAAQoB,OAAO,CAAElB,oBAAqB,CAAAiB,QAAA,CAAC,WAEvC,CAAQ,CAAC,CACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}