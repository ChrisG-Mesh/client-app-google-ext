{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenLink=()=>{const[iFrameUrl,setIFrameUrl]=useState(null);const[showIframe,setShowIframe]=useState(false);const fetchData=async()=>{try{const response=await fetch('http://localhost:3000/api/getCatalogLink',{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setIFrameUrl(result.iFrameUrl);}catch(error){console.error('Error fetching the API',error);}};const handleOpenIframe=()=>{if(!iFrameUrl){fetchData();}setShowIframe(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleOpenIframe,children:\"Open Mesh\"}),showIframe&&iFrameUrl&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"GET Catalog Link success\"}),/*#__PURE__*/_jsx(\"iframe\",{src:iFrameUrl,style:{width:'400px',height:'600px',border:'none'}})]})]});};export default OpenLink;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","OpenLink","iFrameUrl","setIFrameUrl","showIframe","setShowIframe","fetchData","response","fetch","method","headers","ok","Error","result","json","error","console","handleOpenIframe","children","onClick","src","style","width","height","border"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLink.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst OpenLink = () => {\n  const [iFrameUrl, setIFrameUrl] = useState(null);\n  const [showIframe, setShowIframe] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/getCatalogLink', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setIFrameUrl(result.iFrameUrl);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n    }\n  };\n\n  const handleOpenIframe = () => {\n    if (!iFrameUrl) {\n      fetchData();\n    }\n    setShowIframe(true);\n  };\n\n  return (\n    <div>\n      <button onClick={handleOpenIframe}>Open Mesh</button>\n      {showIframe && iFrameUrl && (\n        <div>\n          <h5>GET Catalog Link success</h5>\n          <iframe src={iFrameUrl} style={{ width: '400px', height: '600px', border: 'none' }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OpenLink;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACQ,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCX,YAAY,CAACU,MAAM,CAACX,SAAS,CAAC,CAChC,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI,CAACf,SAAS,CAAE,CACdI,SAAS,CAAC,CAAC,CACb,CACAD,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,mBACEL,KAAA,QAAAkB,QAAA,eACEpB,IAAA,WAAQqB,OAAO,CAAEF,gBAAiB,CAAAC,QAAA,CAAC,WAAS,CAAQ,CAAC,CACpDd,UAAU,EAAIF,SAAS,eACtBF,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjCpB,IAAA,WAAQsB,GAAG,CAAElB,SAAU,CAACmB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAE,CAAC,EACnF,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}