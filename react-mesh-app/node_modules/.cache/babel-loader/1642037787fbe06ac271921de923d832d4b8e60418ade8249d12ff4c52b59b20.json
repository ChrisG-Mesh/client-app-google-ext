{"ast":null,"code":"import React,{useState,useEffect}from'react';import{createLink}from'@meshconnect/web-link-sdk';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MakeAPICall=()=>{const[linkToken,setLinkToken]=useState(null);const fetchData=async()=>{try{// this routes to next.js server running in background\nconst response=await fetch('http://localhost:3000/api/makeAPIcall',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setLinkToken(result.linkToken);}catch(error){console.error('Error fetching the API',error);}};useEffect(()=>{if(linkToken){const link=createLink({clientId:process.env.NEXT_PUBLIC_MESH_CLIENTID,onIntegrationConnected:data=>{console.log('Integration connected:',data);},onExit:error=>{if(error){console.error('Link exited with error:',error);}else{console.log('Link exited successfully');}}});// Open the Link UI in an iframe\nlink.openLink(linkToken);//   const iframe = document.getElementById('mesh-link-iframe');\n//   iframe.onload = () => {\n//     link.openLink(linkToken);\n//   };\n}},[linkToken]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"Fetch Data\"}),linkToken?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mesh Link UI\"}),/*#__PURE__*/_jsx(\"iframe\",{id:\"mesh-link-iframe\",src:\"about:blank\",width:\"100%\",height:\"600px\",frameBorder:\"0\"})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No data fetched yet.\"})]});};export default MakeAPICall;","map":{"version":3,"names":["React","useState","useEffect","createLink","jsx","_jsx","jsxs","_jsxs","MakeAPICall","linkToken","setLinkToken","fetchData","response","fetch","method","headers","ok","Error","result","json","error","console","link","clientId","process","env","NEXT_PUBLIC_MESH_CLIENTID","onIntegrationConnected","data","log","onExit","openLink","children","onClick","id","src","width","height","frameBorder"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/MakeAPICall.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createLink } from '@meshconnect/web-link-sdk';\n\nconst MakeAPICall = () => {\n  const [linkToken, setLinkToken] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      // this routes to next.js server running in background\n      const response = await fetch('http://localhost:3000/api/makeAPIcall', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setLinkToken(result.linkToken);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n    }\n  };\n  useEffect(() => {\n    if (linkToken) {\n      const link = createLink({\n        clientId: process.env.NEXT_PUBLIC_MESH_CLIENTID,\n        onIntegrationConnected: (data) => {\n          console.log('Integration connected:', data);\n        },\n        onExit: (error) => {\n          if (error) {\n            console.error('Link exited with error:', error);\n          } else {\n            console.log('Link exited successfully');\n          }\n        }\n      });\n\n      // Open the Link UI in an iframe\n      link.openLink(linkToken)\n    //   const iframe = document.getElementById('mesh-link-iframe');\n    //   iframe.onload = () => {\n    //     link.openLink(linkToken);\n    //   };\n    }\n  }, [linkToken]);\n\n  return (\n    <div>\n      <button onClick={fetchData}>Fetch Data</button>\n      {linkToken ? (\n        <div>\n          <h1>Mesh Link UI</h1>\n          <iframe\n            id=\"mesh-link-iframe\"\n            src=\"about:blank\"\n            width=\"100%\"\n            height=\"600px\"\n            frameBorder=\"0\"\n          ></iframe>\n        </div>\n      ) : (\n        <div>No data fetched yet.</div>\n      )}\n    </div>\n  );\n};\n\n\nexport default MakeAPICall;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uCAAuC,CAAE,CACpEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCT,YAAY,CAACQ,MAAM,CAACT,SAAS,CAAC,CAChC,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CACDlB,SAAS,CAAC,IAAM,CACd,GAAIO,SAAS,CAAE,CACb,KAAM,CAAAa,IAAI,CAAGnB,UAAU,CAAC,CACtBoB,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAC/CC,sBAAsB,CAAGC,IAAI,EAAK,CAChCP,OAAO,CAACQ,GAAG,CAAC,wBAAwB,CAAED,IAAI,CAAC,CAC7C,CAAC,CACDE,MAAM,CAAGV,KAAK,EAAK,CACjB,GAAIA,KAAK,CAAE,CACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,IAAM,CACLC,OAAO,CAACQ,GAAG,CAAC,0BAA0B,CAAC,CACzC,CACF,CACF,CAAC,CAAC,CAEF;AACAP,IAAI,CAACS,QAAQ,CAACtB,SAAS,CAAC,CAC1B;AACA;AACA;AACA;AACA,CACF,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf,mBACEF,KAAA,QAAAyB,QAAA,eACE3B,IAAA,WAAQ4B,OAAO,CAAEtB,SAAU,CAAAqB,QAAA,CAAC,YAAU,CAAQ,CAAC,CAC9CvB,SAAS,cACRF,KAAA,QAAAyB,QAAA,eACE3B,IAAA,OAAA2B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB3B,IAAA,WACE6B,EAAE,CAAC,kBAAkB,CACrBC,GAAG,CAAC,aAAa,CACjBC,KAAK,CAAC,MAAM,CACZC,MAAM,CAAC,OAAO,CACdC,WAAW,CAAC,GAAG,CACR,CAAC,EACP,CAAC,cAENjC,IAAA,QAAA2B,QAAA,CAAK,sBAAoB,CAAK,CAC/B,EACE,CAAC,CAEV,CAAC,CAGD,cAAe,CAAAxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}