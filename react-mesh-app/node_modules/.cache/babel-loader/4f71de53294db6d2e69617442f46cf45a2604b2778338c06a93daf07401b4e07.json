{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenLinkWebSDK=()=>{const[linkToken,setLinkToken]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchLinkToken=async()=>{setLoading(true);setError(null);try{const response=await fetch('http://localhost:3000/api/linkTokenCall',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setLinkToken(result.linkToken);}catch(error){console.error('Error fetching link token:',error);setError(error.message);}finally{setLoading(false);}};const handleOpenPopupClick=async()=>{await fetchLinkToken();if(linkToken){// Open popup window\nconst popupWindow=window.open('','MeshLinkPopup','width=800,height=600');if(popupWindow){popupWindow.document.body.innerHTML='<div id=\"popup-root\"></div>';popupWindow.document.title='Popup Window';popupWindow.document.body.style.backgroundColor='#f0f0f0';// Pass linkToken to popup window\npopupWindow.linkToken=linkToken;popupWindow.openLinkInPopup=true;}else{setError('Popup blocked. Please enable popups for this site.');}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleOpenPopupClick,disabled:loading,children:loading?'Loading...':'Open Popup Window'}),error&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),linkToken&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Link Token fetched: \",linkToken]})]});};export default OpenLinkWebSDK;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","OpenLinkWebSDK","linkToken","setLinkToken","loading","setLoading","error","setError","fetchLinkToken","response","fetch","method","headers","ok","Error","result","json","console","message","handleOpenPopupClick","popupWindow","window","open","document","body","innerHTML","title","style","backgroundColor","openLinkInPopup","children","onClick","disabled"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLinkWebSDK.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst OpenLinkWebSDK = () => {\n  const [linkToken, setLinkToken] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchLinkToken = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3000/api/linkTokenCall', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setLinkToken(result.linkToken);\n    } catch (error) {\n      console.error('Error fetching link token:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenPopupClick = async () => {\n    await fetchLinkToken();\n    if (linkToken) {\n      // Open popup window\n      const popupWindow = window.open('', 'MeshLinkPopup', 'width=800,height=600');\n      if (popupWindow) {\n        popupWindow.document.body.innerHTML = '<div id=\"popup-root\"></div>';\n        popupWindow.document.title = 'Popup Window';\n        popupWindow.document.body.style.backgroundColor = '#f0f0f0';\n\n        // Pass linkToken to popup window\n        popupWindow.linkToken = linkToken;\n        popupWindow.openLinkInPopup = true;\n      } else {\n        setError('Popup blocked. Please enable popups for this site.');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleOpenPopupClick} disabled={loading}>\n        {loading ? 'Loading...' : 'Open Popup Window'}\n      </button>\n      {error && <p>Error: {error}</p>}\n      {linkToken && <p>Link Token fetched: {linkToken}</p>}\n    </div>\n  );\n};\n\nexport default OpenLinkWebSDK;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAY,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjCH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACtEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCb,YAAY,CAACY,MAAM,CAACb,SAAS,CAAC,CAChC,CAAE,MAAOI,KAAK,CAAE,CACdW,OAAO,CAACX,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,CACzB,CAAC,OAAS,CACRb,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAc,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,KAAM,CAAAX,cAAc,CAAC,CAAC,CACtB,GAAIN,SAAS,CAAE,CACb;AACA,KAAM,CAAAkB,WAAW,CAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAE,eAAe,CAAE,sBAAsB,CAAC,CAC5E,GAAIF,WAAW,CAAE,CACfA,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAG,6BAA6B,CACnEL,WAAW,CAACG,QAAQ,CAACG,KAAK,CAAG,cAAc,CAC3CN,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,CAAG,SAAS,CAE3D;AACAR,WAAW,CAAClB,SAAS,CAAGA,SAAS,CACjCkB,WAAW,CAACS,eAAe,CAAG,IAAI,CACpC,CAAC,IAAM,CACLtB,QAAQ,CAAC,oDAAoD,CAAC,CAChE,CACF,CACF,CAAC,CAED,mBACEP,KAAA,QAAA8B,QAAA,eACEhC,IAAA,WAAQiC,OAAO,CAAEZ,oBAAqB,CAACa,QAAQ,CAAE5B,OAAQ,CAAA0B,QAAA,CACtD1B,OAAO,CAAG,YAAY,CAAG,mBAAmB,CACvC,CAAC,CACRE,KAAK,eAAIN,KAAA,MAAA8B,QAAA,EAAG,SAAO,CAACxB,KAAK,EAAI,CAAC,CAC9BJ,SAAS,eAAIF,KAAA,MAAA8B,QAAA,EAAG,sBAAoB,CAAC5B,SAAS,EAAI,CAAC,EACjD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}