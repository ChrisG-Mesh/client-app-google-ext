{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const OpenLinkWebSDK=()=>{const[linkToken,setLinkToken]=useState(null);const[error,setError]=useState(null);const fetchData=async()=>{try{const response=await fetch('http://localhost:3000/api/linkTokenCall',{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setLinkToken(result.linkToken);}catch(error){console.error('Error fetching the API',error);setError(error.message);}};useEffect(()=>{fetchData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),linkToken?/*#__PURE__*/_jsxs(\"p\",{children:[\"Link Token: \",linkToken]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});};export default OpenLinkWebSDK;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","jsx","_jsx","OpenLinkWebSDK","linkToken","setLinkToken","error","setError","fetchData","response","fetch","method","headers","ok","Error","result","json","console","message","children"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLinkWebSDK.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst OpenLinkWebSDK = () => {\n  const [linkToken, setLinkToken] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/linkTokenCall', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setLinkToken(result.linkToken);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {error && <p>Error: {error}</p>}\n      {linkToken ? (\n        <p>Link Token: {linkToken}</p>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default OpenLinkWebSDK;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAW,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACtEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCX,YAAY,CAACU,MAAM,CAACX,SAAS,CAAC,CAChC,CAAE,MAAOE,KAAK,CAAE,CACdW,OAAO,CAACX,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,CACzB,CACF,CAAC,CAEDpB,SAAS,CAAC,IAAM,CACdU,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACER,KAAA,QAAAmB,QAAA,EACGb,KAAK,eAAIN,KAAA,MAAAmB,QAAA,EAAG,SAAO,CAACb,KAAK,EAAI,CAAC,CAC9BF,SAAS,cACRJ,KAAA,MAAAmB,QAAA,EAAG,cAAY,CAACf,SAAS,EAAI,CAAC,cAE9BF,IAAA,MAAAiB,QAAA,CAAG,YAAU,CAAG,CACjB,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}