{"ast":null,"code":"import React,{useEffect,useState}from'react';import{createLink}from'@meshconnect/web-link-sdk';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenLink=()=>{const[iFrameUrl,setIFrameUrl]=useState(null);const fetchData=async()=>{try{const response=await fetch('http://localhost:3000/api/getCatalogLink',{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json'}});if(!response.ok){throw new Error('Network response error');}const result=await response.json();setIFrameUrl(result.iFrameUrl);}catch(error){console.error('Error fetching the API',error);}};// Fetch data on component mount\nuseEffect(()=>{fetchData();},[]);return/*#__PURE__*/_jsx(\"div\",{children:iFrameUrl?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Catalog Link success\"}),/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[\"Catalog IFrame URL: \",iFrameUrl]}),/*#__PURE__*/_jsx(\"iframe\",{src:iFrameUrl,style:{width:'100%',height:'600px',border:'none'}})]}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"})});};export default OpenLink;","map":{"version":3,"names":["React","useEffect","useState","createLink","jsx","_jsx","jsxs","_jsxs","OpenLink","iFrameUrl","setIFrameUrl","fetchData","response","fetch","method","headers","ok","Error","result","json","error","console","children","style","whiteSpace","src","width","height","border"],"sources":["/Users/christopher.gentibano/Desktop/Google Extension Project/google-ext/react-mesh-app/src/components/OpenLink.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createLink } from '@meshconnect/web-link-sdk';\n\nconst OpenLink = () => {\n  const [iFrameUrl, setIFrameUrl] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/getCatalogLink', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n\n      const result = await response.json();\n      setIFrameUrl(result.iFrameUrl);\n    } catch (error) {\n      console.error('Error fetching the API', error);\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {iFrameUrl ? (\n        <div>\n          <h3>Catalog Link success</h3>\n          <p style={{ whiteSpace: 'pre-wrap' }}>Catalog IFrame URL: {iFrameUrl}</p>\n          <iframe src={iFrameUrl} style={{ width: '100%', height: '600px', border: 'none' }} />\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default OpenLink;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAS,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCT,YAAY,CAACQ,MAAM,CAACT,SAAS,CAAC,CAChC,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED;AACAnB,SAAS,CAAC,IAAM,CACdU,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,IAAA,QAAAiB,QAAA,CACGb,SAAS,cACRF,KAAA,QAAAe,QAAA,eACEjB,IAAA,OAAAiB,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7Bf,KAAA,MAAGgB,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAF,QAAA,EAAC,sBAAoB,CAACb,SAAS,EAAI,CAAC,cACzEJ,IAAA,WAAQoB,GAAG,CAAEhB,SAAU,CAACc,KAAK,CAAE,CAAEG,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAE,CAAC,EAClF,CAAC,cAENvB,IAAA,QAAAiB,QAAA,CAAK,YAAU,CAAK,CACrB,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}